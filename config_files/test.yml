experiment:
  dataset: 
    name: ml-100k
    item: # infos related to item dataset (mandatory, at least item_id)
      path: datasets/ml-100k/processed/item.csv 
      extra_features: [movie_year, movie_title] # features(columns) beside item_id to be used
    user: # mandatory (at least user_id)
      path: datasets/ml-100k/processed/user.csv 
      extra_features: [gender, occupation] # features beside user_id
    ratings: # mandatory (at least [user_id, item_id, rating])
      path: datasets/ml-100k/processed/rating.csv 
      timestamp: True
    enrich:
      map_path: datasets/ml-100k/processed/map.csv
      enrich_path: datasets/ml-100k/processed/enriched.csv
      remove_unmatched: False
      properties:
        - type: subject
          grouped: True
          sep: "::"
        - type: director
          grouped: True
          sep: "::"

  preprocess:
    - method: filter_by_rating  
      parameters:
        min: 3  #inclusive
        max: 11 #inclusive
    - method: binarize
      parameters: 
        threshold: 4
    - method: filter_kcore
      parameters:
        core: 5
        iterations: 3
        target: user # user or rating
  filter:
    strategy: global_threshold
    threshold: 10
  split:
    strategy: ratio
    ratio: [50, 30, 20]

  models:
    - model1:
        parameters:
          neighbors: 10
    - model2:
        parameters:
          embedding_size: 64