experiment:
  dataset: 
    name: ml-100k
    item: # infos related to item dataset (mandatory, at least item_id)
      path: datasets/ml-100k/processed/item.csv 
      extra_features: [movie_year, movie_title] # features(columns) beside item_id to be used
    user: # mandatory (at least user_id)
      path: datasets/ml-100k/processed/user.csv 
      extra_features: [gender, occupation] # features beside user_id
    ratings: # mandatory (at least [user_id, item_id, rating])
      path: datasets/ml-100k/processed/rating.csv 
      timestamp: True
    # enrich:
    #   map_path: datasets/ml-100k/processed/map.csv
    #   enrich_path: datasets/ml-100k/processed/enriched.csv
    #   remove_unmatched: False
    #   properties:
    #     - type: subject
    #       grouped: True
    #       sep: "::"
    #     - type: director
    #       grouped: True
    #       sep: "::"

  preprocess:
    # - method: filter_by_rating  
    #   parameters:
    #     threshold: 20
    # - method: binarize
    #   parameters: 
    #     threshold: 4
    - method: filter_kcore
      parameters:
        k: 20
        iterations: 1
        target: user # user or rating

  split:
    seed: 42
    # test:
    #   method: random_by_ratio 
    #   level: global 
    #   p: 0.2
    # validation:
    #   method: random_by_ratio 
    #   level: global 
    #   p: 0.2

    # test:
    #   method: timestamp_by_ratio 
    #   level: user 
    #   p: 0.1
    # validation:
    #   level: user 
    #   method: timestamp_by_ratio 
    #   p: 0.2

    # test:
    #   method: fixed_timestamp 
    #   # type: global_level 
    #   timestamp: 890000000
    # validation:
    #   method: fixed_timestamp 
    #   timestamp: 880000000


    test:
      method: k_fold
      k: 3
      level: 'user'


  # TODO: deixar a opção de partir de alguns tipos especificos de nó
  models:
    - name: deepwalk_based
      config:
        save_weights: True
      parameters:
        walk_len: 10
        p: 1.0
        q: 1.0
        n_walks: 50
        embedding_size: 64
        epochs: 1
  
  evaluation:
    k: 5
    relevance_threshold: 3
    metrics: [MAP, nDCG]